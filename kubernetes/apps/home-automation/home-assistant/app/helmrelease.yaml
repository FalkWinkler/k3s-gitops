---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home-automation
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.2.5
    env:
      TZ: "${TIMEZONE}"
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${LB_HOMEASSISTANT_IP}
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/icon: mdi:home-assistant
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host2 "home-assistant.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
              - *host2
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
     # fsGroupChangePolicy: "OnRootMismatch"
    securityContext:
      privileged: true
    # podAnnotations:
    #   secret.reloader.stakater.com/reload: *app
    requests:
      cpu: 10m
      memory: 100Mi
      limits:
        memory: 750Mi
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
    persistence:
      config:
        enabled: true
        type: nfs
        server: ${LOCAL_LAN_TRUENAS}
        mountPath: /config
        path: /mnt/Volume1/k3s/homeassitant/config
        accessMode: ReadWriteOnce
        mountOptions:
          - nolock
      # recordings:
      #   enabled: true
      #   type: nfs
      #   server: 192.168.10.10
      #   mountPath: /recordings
      #   path: /mnt/Volume1/recordings
      #   accessMode: ReadWriteOnce
      #   mountOptions:
      #     - nolock

